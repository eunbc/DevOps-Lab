# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Test with Gradle Wrapper
      run: ./gradlew test

    # 태그 생성
    - name: Generate Tag
      id: generate-tag
      run: |
        DATE=$(date +'%Y%m%d%H%M%S')
        echo "TAG_NAME=v${DATE}" >> $GITHUB_ENV

    # 태그로 커밋하기
#    - name: Create Git Tag
#      run: |
#        git config --global user.name 'github-actions[bot]'
#        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#        git tag ${{ env.TAG_NAME }}
#        git push origin ${{ env.TAG_NAME }}  // 403 ERROR!

    # Docker 로그인
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # Docker 이미지 빌드 및 푸시
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/myimage:${{ env.TAG_NAME }}


